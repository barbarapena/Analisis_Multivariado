library(tidyverse)
install.packages("MuMIn")
library(MuMIn)
install.packages("caret")
library(caret)
data("mtcars")
library(caret)
library(broom)
index <- sample(1:nrow(mtcars), size=round(nrow(mtcars)/2))
Train <- mtcars[index, ]
Test <- mtcars[-index,]
set.seed(2020)
set.seed(2020)
index <- sample(1:nrow(mtcars), size=round(nrow(mtcars)/2))
Train <- mtcars[index, ]
Test <- mtcars[-index,]
View(Test)
View(Train)
plot("mtcars", x= mtcars$hp, y=mtcars$mpg)
plot(mtcars, x= mtcars$hp, y=mtcars$mpg)
plot.xy(mtcars, x= mtcars$hp, y=mtcars$mpg)
scatter.smooth(mtcars, x= mtcars$hp, y=mtcars$mpg)
plot??
(mtcars, x= mtcars$hp, y=mtcars$mpg)
plot??
(mtcars, x= mtcars$hp, y=mtcars$mpg)
??plot
plot( mtcars$hp, mtcars$mpg)
plot(x=mtcars$hp, y=mtcars$mpg)
plot(x=mtcars$hp, y=mtcars$mpg)
plot(mtcars, x=hp, y=mpg)
modelo <- lm (mpg ~ hp + I(hp^2), data=Train)
summary(modelo)
broom:tidy(modelo)
library(broom)
broom::tidy(modelo)
broom::glance(modelo)
Test$Pred <- predict(Modelo, Test)
Test$Pred <- predict(modelo, Test)
Test <- Test %>%  mutate (resid=mpg-Pred) %>%  select(hp, mpg, Pred, resid)
Test
hist(Test$resid)
postResample(pred=Test$Pred, obs=Test$mpg)
AICc(modelo)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
AIC(modelo)
AICc(modelo)
library (tidyverse)
library (MuMIn)
library (broom)
library(caret)
data("mtcars")
fit1 <- lm(mpg ~ carb + cyl, data = mtcars)
fit2 <- lm(mpg ~ cyl + wt, data = mtcars)
fit3 <- lm(mpg ~ am + qsec + wt, data = mtcars)
fit4 <- lm(mpg ~ carb + cyl + wt, data = mtcars)
fit5 <- lm(mpg ~ am + carb + cyl + qsec + wt, data = mtcars)
fit6 <- lm(mpg ~ am + carb + cyl + hp + qsec, data = mtcars)
models <- list(fit1, fit2, fit3, fit4, fit5, fit6)
Select<- model.sel(models)
View(Select)
Selected <- subset(Select, delta <= 2)
View(Selected)
BestModel <- get.models(Select, 1)[[1]]
broom::glance(BestModel)
broom::tidy(BestModel)
S<- as.data.frame(Selected)
S <- as.data.frame(Selected) %>% select(cyl, weight)
View(S)
S_full <- S
S_full- S_full %>%  mutate(cyl= ifelse(is.na(cyl),0,cyl)) %>%  mutate(Theta_i=cyl*weight)
View(S_full)
S_full- S_full %>%  mutate(cyl=ifelse(is.na(cyl), 0,cyl)) %>%  mutate(Theta_i=cyl*weight)
S_full- S_full %>%  mutate(cyl=ifelse(is.na(cyl), 0, cyl)) %>%  mutate(Theta_i=cyl*weight)
S_full <- S_full %>%  mutate(cyl=ifelse(is.na(cyl), 0, cyl)) %>%  mutate(Theta_i=cyl*weight)
S_full <- S_full %>%  mutate(cyl=ifelse(is.na(cyl), 0, cyl)) %>%  mutate(Theta_i=cyl*weight) %>%
summarise(Theta=sum(Theta_i))
S_subset <- S_subset %>% filter(!is.na(cyl))
S_subset <- S
S_subset <- S_subset %>% filter(!is.na(cyl))
S_subset <- S_subset %>% filter(!is.na(cyl)) %>%  mutate(Theta_i=cyl*weight) %>%
summarise(Theta=sum(Theta_i))
S_subset <- S_subset %>% filter(!is.na(cyl)) %>%  mutate(Theta_i=cyl*weight) %>%
summarise(Theta=sum(Theta_i)/sum(weight))
S_subset <- S_subset %>% filter(!is.na(cyl)) %>%  mutate(Theta_i=cyl*weight) %>%
summarise(Theta=sum(Theta_i)/sum(weight))
S_subset <- S_subset %>% filter(!is.na(cyl)) %>%  mutate(Theta_i=cyl*weight) %>%
summarise(Theta=sum(Theta_i)/sum(weight))
# Metodo subset
S_subset <- S
S_subset <- S_subset %>% filter(!is.na(cyl))
View(S_subset)
S_subset <- S_subset %>% filter(!is.na(cyl)) %>%  mutate(Theta_i=cyl*weight)
S_subset <- S_subset %>% filter(!is.na(cyl)) %>%  mutate(Theta_i=cyl*weight) %>%
summarise(Theta= sum(Theta_i)/sum(weight))
S_full
S_subset
Modelo_promedio <- model.avg(Select, subset=delta <=2, fit=T)
Modelo_promedio
library(readr)
bloodpress <- read_delim("https://online.stat.psu.edu/onlinecourses/sites/stat501/files/data/bloodpress.txt",
"\t", escape_double = FALSE, col_types = cols(Pt = col_skip()), trim_ws = TRUE)
Correlacion <- cor(bloodpress)
Correlacion <- cor(bloodpress[,-1 ])
Correlacion
ggplot(mtcars, aes (x=qsec, y=mpg)) +
geom_point()
geom_point()+ theme_bw()
ggplot(mtcars, aes (x=qsec, y=mpg)) +
geom_smooth(method = "lm")+
geom_point()+ theme_bw()
library(MuMIn)
library(tidyverse)
data("ChickWeight")
fit1 <- lm(weight ~ Time + Diet, data = ChickWeight)
library(MuMIn)
library(tidyverse)
data("ChickWeight")
fit1 <- lm(weight ~ Time + Diet, data = ChickWeight)
tidy(fit1)
library(broom)
data("ChickWeight")
fit1 <- lm(weight ~ Time + Diet, data = ChickWeight)
tidy(fit1)
#cmabio de pendiente, pero no intercepto (poner dieta como interracion)
fit2 <- lm(weight ~ Time + Time:Diet, data = ChickWeight)
tidy(fit2)
tidy(fit3)
fit3 <- lm(weight ~ Time * Diet, data = ChickWeight)
tidy(fit3)
## Cual es el mejor modelo ?
Select <- MuMIn::model.sel(list(fit1, fit2, fit3))
Select
Test <- augment(fit2)
hist(Test$.resid)
# pero vemos que en la medida que aumenta el peso, los residuales aumentan.... es decir, nuestro predictor no es taaan bueno
ggplot(Test, aes(x = .fitted, y = .resid)) + geom_point() + theme_classic() + geom_hline(yintercept = 0,
lty = 2, color = "red")
#Gamma
#respuesta (link = inverso)
#1/y=Î²1X1+C0
# Modelo Gamma
fit2g <- glm(weight ~ Time + Time:Diet, Gamma, data = ChickWeight)
tidy(fit2g)
fit2p <- glm(weight ~ Time + Time:Diet, poisson, data = ChickWeight)
fit2p <- glm(weight ~ Time + Time:Diet, poisson, data = ChickWeight)
DF z- data.frame(Time=3, Diet =as.factor(1))
predict(fit2g, newdata=Df, type="response")
predict(fit2g, newdata=DF, type="response")
DF<- data.frame(Time=3, Diet =as.factor(1))
predict(fit2g, newdata=DF, type="response")
predict(fit2, newdata=DF, type="response")
predict(fit2p, newdata=DF, type="response")
train <- train <- read_csv("https://raw.githubusercontent.com/derek-corcoran-barrios/derek-corcoran-barrios.github.io/master/CursoMultiPres/Capitulo_3/train.csv") %>%
filter(Embarked == "S")
train <- read_csv("https://raw.githubusercontent.com/derek-corcoran-barrios/derek-corcoran-barrios.github.io/master/CursoMultiPres/Capitulo_3/train.csv") %>%
filter(Embarked == "S")
train
FitBin <- glm(Survived ~ Fare + Sex, data = train)
FitBin2 <- glm(Survived ~ Fare * Sex, data = train, family = binomial)
tidy(FitBin)
tidy(FitBin2)
FitBin <- glm(Survived ~ Fare + Sex, data = train)
FitBin2 <- glm(Survived ~ Fare + Sex, data = train, family = binomial)
tidy(FitBin)
tidy(FitBin2)
FitBin3 <- glm(Survived ~ Fare * Sex, data = train, family = binomial)
tidy(FitBin3)
DF2<- data.frame(Fare=100, Sex="male")
predict(FitBin2, newdata=DF, type = "response")
DF2<- data.frame(Fare=c(100,100),  Sex=c("male", "female")
predict(FitBin2, newdata=DF, type = "response")
predict(FitBin2, newdata=DF2, type = "response")
DF2<- data.frame(Fare=c(100,100),  Sex=c("male", "female")
predict(FitBin2, newdata=DF2, type = "response")
DF2<- data.frame(Fare= c(100,100),Sex=c("male", "female"))
predict(FitBin2, newdata=DF2, type = "response")
Data <- ChickWeight
Data$PredL <- predict(fit2, newdata = Data)
Data$PredP <- predict(fit2p, newdata = Data, type = "response")
Data$PredG <- predict(fit2g, newdata = Data, type = "response")
Data$ResidL <- Data$PredL - Data$weight
Data$ResidP <- Data$PredP - Data$weight
Data$ResidG <- Data$PredG - Data$weight
sqrt(sum(Data$ResidP^2))
sqrt(sum(Data$ResidG^2))
library(lme4)
library(caret)
library(broom.mixed)
library(broom)
library(tidyverse)
library(MuMIn)
install.packages("lme4")
install.packages("broom.mixed")
library(lme4)
library(caret)
library(broom.mixed)
library(broom)
library(tidyverse)
library(MuMIn)
data("CO2")
ggplot(CO2, aes(x = conc, y = uptake)) +
geom_point(aes(shape = Treatment, color = Type)) +
geom_path(aes(color = Type, lty =Treatment, group = Plant)) +
theme_bw()
mod1 <- lm(uptake ~ Type * Treatment + I(log(conc)) + conc, data = CO2)
mod2 <- lmer(uptake ~ Type * Treatment + I(log(conc)) + conc + (1 | Plant), data = CO2)
glance(mod1)
tidy(mod1)
broom.mixed::glance(mod2)
broom.mixed::tidy(mod2)
options(na.action = "na.fail")
Max.Vars <- floor(nrow(CO2)/10)
Seleccion <- dredge(mod2, m.lim = c(0, Max.Vars), rank = "BIC")
BestModel <- get.models(Seleccion, 1)[[1]]
broom.mixed::tidy(BestModel)
data("Cement")
GlobalMod <- lm(y ~ ., data = Cement)
glance(GlobalMod)
tidy(GlobalMod)
smat <- abs(cor(Cement[, -1])) <= 0.7
smat[!lower.tri(smat)] <- NA
Max.Vars <- floor(nrow(Cement)/10)
Selected1 <- dredge(GlobalMod, subset = smat, m.lim = c(0, Max.Vars))
Selected1
set.seed(707)
ctrl <- trainControl(method = "cv", number = 5)
Modelo <- train(mpg ~ hp, data = mtcars, method = "lm", trControl = ctrl)
ModeloFinal <- Modelo$finalModel
glance(ModeloFinal)
tidy(ModeloFinal)
DF <- Modelo$resample
DF <- DF %>% select(Rsquared, Resample)
form1 <- "mpg ~ hp"
form2 <- "mpg ~ hp + I(hp^2)"
form3 <- "mpg ~ hp + I(hp^2) + I(hp^3)"
form4 <- "mpg ~ hp + I(hp^2) + I(hp^3) + I(hp^4)"
form5 <- "mpg ~ hp + I(hp^2) + I(hp^3) + I(hp^4) + I(hp^5)"
form6 <- "mpg ~ hp + I(hp^2) + I(hp^3) + I(hp^4) + I(hp^5) + I(hp^6)"
forms <- list(form1, form2, form3, form4, form5, form6)
library(glmnet)
set.seed(707)
ctrl <- trainControl(method = "cv", number = 5)
K = (2:7)
Tests <- forms %>% map(~train(as.formula(.x),
data = mtcars, method = "lm",
trControl = ctrl)) %>%
map(~as.data.frame(.x$resample)) %>%
map(~select(.x, Rsquared)) %>%
map(~summarise_all(.x, funs(mean,
sd), na.rm = T)) %>% map2(.y = forms,
~mutate(.x, model = .y)) %>%
reduce(bind_rows) %>% mutate(K = K) %>%
arrange(desc(mean))
library(glmnet)
Test
View(Tests)
https://github.com/BIO4318/Tarea_1_barbarapena.git
library(glmnet)
library(tidyverse)
library(caret)
library(brrom)
library(broom)
data("mtcars")
Fit <- lm(mpg~wt, data=mtcars)
tidy(Fit)
Preds<- augment(Fit)
Preds<- augment(Fit)
ggplot(Preds, aes(x=wt, y=mpg))+
geom_point() +
geom_path(aes(y= .fitted)) +
geom_linerange(aes(ymin= .fitted, ymax=mpg)) +
theme_bw()
SSE<-Preds %>% mutate(SE= .resid^2)
view(SSE)
SSE<-Preds %>% mutate(SE= .resid^2) %>% summarise(SEE=sum(SE))
SEE
SSE
